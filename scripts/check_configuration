check_config_()
{
  local retVal=0

  check_config_general

  local arg args isForce p opts
  declare -a args


  for arg in $* ; do
     if [ ${arg} = '--force' ] ; then
        isForce=t
     else
        args+=( "$arg" )
     fi
  done

  test ! -w $QA_SRC && opts=--no-w-perm

  for p in CF ${args[*]} ; do  # usually a single one
     # no external sources
     # test $p = HAPPI && check_config_HAPPI ${opts}
     # test $p = CMIP5 && check_config_CMIP5 ${opts}

     if [ $p = CF ] ; then
         check_config_CF ${opts}
     elif [ $p = CMIP6 ] ; then
         check_config_CMIP6 ${opts}
     elif [ $p = CORDEX ] ; then
         check_config_CORDEX ${opts}
     fi

     test $? -gt 0 && retVal=1
  done

  return $retVal
}

check_config_general()
{
   # update for QA is checked in install

   if [ ! ${QA_TABLES} ] ; then
      . ${QA_SRC}/scripts/getTablesPath
      . $QA_SRC/scripts/parseConfigFile QA_TABLES
   fi

   return
}

check_config_CF()
{
   local prj=CF

   if [ ! ${LAST_CF_UPDATE} ] || [ ${isForce} ] ; then
      . ${QA_SRC}/scripts/get_externalSources \
         -P $prj --qa-src=${QA_SRC} \
         --qa-tables=${QA_TABLES} --config_file=${CONFIG_FILE}
   fi

   return
}

check_config_CMIP5()
{
   local prj=CMIP5

   # provided by QA_TABLES
   return
}

check_config_CMIP6()
{
   local prj=CMIP6

   if [ ! ${LAST_CMIP6_UPDATE} || [ ${isForce} ] ; then
     . ${QA_SRC}/scripts/get_externalSources \
         -P $prj --qa-src=${QA_SRC} \
         --qa-tables=${QA_TABLES} --config_file=${CONFIG_FILE}
   fi

   return
}

check_config_CORDEX()
{
   local prj=CORDEX

   if [ ! ${LAST_CORDEX_UPDATE} || [ ${isForce} ] ; then
      . ${QA_SRC}/scripts/get_externalSources \
         -P $prj --qa-src=${QA_SRC} \
         --qa-tables=${QA_TABLES} --config_file=${CONFIG_FILE}
   fi

   return
}

check_config_HAPPI()
{
   # provided in QA_TABLES
   return
}

# main
# here, only undefined config assignments are resolved.

check_config_ $*
