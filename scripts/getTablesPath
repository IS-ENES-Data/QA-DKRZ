getTablesPath()
{
  # path to the current user's home
  export QA_TABLES

  if [ ${QA_TABLES} ] ; then
    # if it is a new path, then adjust the config file
    . $QA_SRC/scripts/parseConfigFile QA_TABLES=${QA_TABLES}
    return 0
  fi

  if . $QA_SRC/scripts/parseConfigFile QA_TABLES ; then
     return 0
  fi

  # take QA_TABLES from other config file sections, if any.
  local i qt qts
  declare -a qts
  qts=( $( grep 'QA_TABLES[[:space:]]*=' $CONFIG_FILE ) )
  # remove effect of blanks between QA_TABLES and '=';
  # take only the first one
  for(( i=0 ;  i < ${#qts[*]} ; ++i )) ; do
     if [ "${qts[i]}" = QA_TABLES= ] ; then
       :
     elif [ "${qts[i]#QA_TABLES=}" != ${qts[i]} ] ; then
       QA_TABLES=${qts[i]#QA_TABLES=}
       break
     elif [ "${qts[i]}" = QA_TABLES ] ; then
       :
     elif [ "${qts[i]}" = '=' ] ; then
       i=$((i+1))
       QA_TABLES=${qts[i]}
       break
     elif [ "${#qts[i]}" -gt 1 -a ${qts[i][0]} = '=' ] ; then
       QA_TABLES=${qts[i]:1}
       break
     else
       QA_TABLES=${qts[i]}
       break
     fi
  done
  qts=()

  local  dpath=${QA_SRC}/QA_Tables

  if [ ! -w $dpath ] ; then
    dpath=${HOME}/.qa-dkrz/QA_TABLES
  fi

  test ${DEBUG} && set +x

  echo -e "\nPlease, specify variable QA_TABLES [default: ${dpath}], " # > ${TTY}
  read -p "the spot for external tables and programs: " QA_TABLES # 2> ${TTY}

  test ${DEBUG} && set -x

  test ! ${QA_TABLES} && QA_TABLES=${dpath}

  local i
  for i in 1 2 3 ; do
     if [ ${i} -eq 3 ] ; then
       echo "Could not mkdir QA_TABLES=${QA_TABLES}."
       exit 41
     fi

     if mkdir -p ${QA_TABLES} &> /dev/null ; then
        . $QA_SRC/scripts/parseConfigFile QA_TABLES=${QA_TABLES}
        break
     fi

     echo "Could not mkdir QA_TABLES=${QA_TABLES} (missing permission?)."
     dpath=${HOME}/.qa-dkrz
     read -p "Do you want to try ${dpath} ? " QA_TABLES # 2> ${TTY}
  done

  if [ -d $QA_TABLES ] ; then
     if [ ! -w $QA_TABLES ] ; then
       echo "directory $QA_TABLES without write permissions,"
       exit 41
     fi
  else
     echo "no such directory QA_TABLES,"
     echo "please, restart with added option --qa-tables=path"
     exit 41
  fi

  if [ ${QA_TABLES} ] ; then
     . $QA_SRC/scripts/parseConfigFile QA_TABLES=${QA_TABLES}
  fi

  return 0
}

# main

getTablesPath $1

return 0
